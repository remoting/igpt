# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # 例如，匹配 v1.0.0, v1.1.1 等版本标签
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: BUILD
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    needs: release  # 确保 release job 先执行完成
    environment: BUILD
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
 
    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
      # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './ -> target'

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
        releaseName: "App v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}
        
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ needs.release.outputs.upload_url }}
    #     asset_path: ./output/iupload_${{ matrix.goos }}_${{ matrix.arch }}${{ runner.os == 'Windows' && '.exe' || '' }}
    #     asset_name: iupload_${{ matrix.goos }}_${{ matrix.arch }}${{ runner.os == 'Windows' && '.exe' || '' }}
    #     asset_content_type: application/octet-stream